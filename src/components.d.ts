/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface TheChild {}
  interface TheChildAttributes extends StencilHTMLAttributes {}

  interface TheInner {}
  interface TheInnerAttributes extends StencilHTMLAttributes {}

  interface TheOuter {}
  interface TheOuterAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'TheChild': Components.TheChild;
    'TheInner': Components.TheInner;
    'TheOuter': Components.TheOuter;
  }

  interface StencilIntrinsicElements {
    'the-child': Components.TheChildAttributes;
    'the-inner': Components.TheInnerAttributes;
    'the-outer': Components.TheOuterAttributes;
  }


  interface HTMLTheChildElement extends Components.TheChild, HTMLStencilElement {}
  var HTMLTheChildElement: {
    prototype: HTMLTheChildElement;
    new (): HTMLTheChildElement;
  };

  interface HTMLTheInnerElement extends Components.TheInner, HTMLStencilElement {}
  var HTMLTheInnerElement: {
    prototype: HTMLTheInnerElement;
    new (): HTMLTheInnerElement;
  };

  interface HTMLTheOuterElement extends Components.TheOuter, HTMLStencilElement {}
  var HTMLTheOuterElement: {
    prototype: HTMLTheOuterElement;
    new (): HTMLTheOuterElement;
  };

  interface HTMLElementTagNameMap {
    'the-child': HTMLTheChildElement
    'the-inner': HTMLTheInnerElement
    'the-outer': HTMLTheOuterElement
  }

  interface ElementTagNameMap {
    'the-child': HTMLTheChildElement;
    'the-inner': HTMLTheInnerElement;
    'the-outer': HTMLTheOuterElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
